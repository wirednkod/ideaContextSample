{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { createSignedBlockExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.createdAtHash || header.hash;\n    return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header));\n  }), map(([block, events, header]) => createSignedBlockExtended(block.registry, block, events, header.validators))));\n}","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/api-derive/chain/subscribeNewBlocks.js"],"names":["combineLatest","of","map","switchMap","createSignedBlockExtended","memo","subscribeNewBlocks","instanceId","api","derive","chain","subscribeNewHeads","pipe","header","blockHash","createdAtHash","hash","rpc","getBlock","query","system","events","at","block","registry","validators"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,kBAAlC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,yBAAT,QAA0C,kBAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6C;AAClD,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAMC,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,iBAAjB,GAAqCC,IAArC,CAA0CT,SAAS,CAACU,MAAM,IAAI;AAC1F,UAAMC,SAAS,GAAGD,MAAM,CAACE,aAAP,IAAwBF,MAAM,CAACG,IAAjD;AACA,WAAOhB,aAAa,CAACQ,GAAG,CAACS,GAAJ,CAAQP,KAAR,CAAcQ,QAAd,CAAuBJ,SAAvB,CAAD,EAAoCN,GAAG,CAACW,KAAJ,CAAUC,MAAV,CAAiBC,MAAjB,CAAwBC,EAAxB,CAA2BR,SAA3B,CAApC,EAA2Eb,EAAE,CAACY,MAAD,CAA7E,CAApB;AACD,GAHgF,CAAnD,EAG1BX,GAAG,CAAC,CAAC,CAACqB,KAAD,EAAQF,MAAR,EAAgBR,MAAhB,CAAD,KAA6BT,yBAAyB,CAACmB,KAAK,CAACC,QAAP,EAAiBD,KAAjB,EAAwBF,MAAxB,EAAgCR,MAAM,CAACY,UAAvC,CAAvD,CAHuB,CAAnB,CAAX;AAID","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { createSignedBlockExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.createdAtHash || header.hash;\n    return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header));\n  }), map(([block, events, header]) => createSignedBlockExtended(block.registry, block, events, header.validators))));\n}"]},"metadata":{},"sourceType":"module"}