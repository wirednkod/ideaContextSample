{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport BN from 'bn.js';\nimport { decorateDerive } from '@polkadot/api-derive';\nimport { memo } from '@polkadot/api-derive/util';\nimport { expandMetadata } from '@polkadot/metadata';\nimport { RpcCore } from '@polkadot/rpc-core';\nimport { WsProvider } from '@polkadot/rpc-provider';\nimport { TypeRegistry } from '@polkadot/types/create';\nimport { DEFAULT_VERSION as EXTRINSIC_DEFAULT_VERSION } from '@polkadot/types/extrinsic/constants';\nimport { unwrapStorageType } from '@polkadot/types/primitive/StorageKey';\nimport { arrayChunk, arrayFlatten, assert, compactStripLength, logger, u8aToHex } from '@polkadot/util';\nimport { BehaviorSubject, combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap, tap, toArray } from '@polkadot/x-rxjs/operators';\nimport { createSubmittable } from \"../submittable/index.js\";\nimport { augmentObject } from \"../util/augmentObject.js\";\nimport { decorateSections } from \"../util/decorate.js\";\nimport { extractStorageArgs } from \"../util/validate.js\";\nimport { Events } from \"./Events.js\"; // the max amount of keys/values that we will retrieve at once\n\nconst PAGE_SIZE_K = 768; // limited since the trie lookups are heavy\n\nconst PAGE_SIZE_V = 256; // limited since the data may be very large\n\nconst l = logger('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = /*#__PURE__*/_classPrivateFieldLooseKey(\"instanceId\");\n\nvar _registry = /*#__PURE__*/_classPrivateFieldLooseKey(\"registry\");\n\nexport class Decorate extends Events {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new BN(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._errors = {};\n    this._events = {};\n    this._extrinsics = void 0;\n    this._extrinsicType = EXTRINSIC_DEFAULT_VERSION;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    _classPrivateFieldLooseBase(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    _classPrivateFieldLooseBase(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new TypeRegistry();\n    this._rx.registry = _classPrivateFieldLooseBase(this, _registry)[_registry];\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type; // The RPC interface decorates the known interfaces on init\n\n    this._rpcCore = new RpcCore(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], _classPrivateFieldLooseBase(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @description Return the current used registry\n   */\n\n\n  get registry() {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && _classPrivateFieldLooseBase(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @returns `true` if the API decorate multi-key queries\n   */\n\n\n  get supportMulti() {\n    return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;\n  }\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    const decoratedMeta = expandMetadata(registry || _classPrivateFieldLooseBase(this, _registry)[_registry], metadata);\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      augmentObject('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      augmentObject(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    } // this API\n\n\n    augmentObject('query', this._decorateStorage(decoratedMeta, this._decorateMethod), this._query, fromEmpty);\n    augmentObject('consts', decoratedMeta.consts, this._consts, fromEmpty);\n    augmentObject('errors', decoratedMeta.errors, this._errors, fromEmpty);\n    augmentObject('events', decoratedMeta.events, this._events, fromEmpty); // rx\n\n    augmentObject(null, this._decorateStorage(decoratedMeta, this._rxDecorateMethod), this._rx.query, fromEmpty);\n    augmentObject(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  _filterRpc(rpcMethods, additional) {\n    const methods = rpcMethods.methods.map(t => t.toString()); // add any specific user-base RPCs\n\n    if (Object.keys(additional).length !== 0) {\n      this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces\n\n\n      this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);\n\n      this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(k => !allKeys.includes(k));\n    const deletion = allKnown.filter(([k]) => hasResults && !exposed.includes(k) && k !== 'rpc_methods');\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    deletion.forEach(([, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod, input = {}) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName;\n\n      if (!out[sectionName]) {\n        // out and section here are horrors to get right from a typing perspective :(\n        out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n          //  skip subscriptions where we have a non-subscribe interface\n          if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n            section[methodName] = decorateMethod(method, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].json = decorateMethod(method.json, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].raw = decorateMethod(method.raw, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].meta = method.meta;\n          }\n\n          return section;\n        }, {});\n      }\n\n      return out;\n    }, input);\n  } // only be called if supportMulti is true\n\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => (this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt)(calls.map(arg => Array.isArray(arg) ? [arg[0].creator, ...arg.slice(1)] : [arg.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = createSubmittable(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // pass through the `.is`\n\n\n    decorated.is = other => method.is(other); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, ...args) => this._rpcCore.state.getStorage(getArgs(args), hash));\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(creator.meta.type.isPlain ? undefined : creator.meta.type.isMap ? args[0] : creator.meta.type.isDoubleMap ? [args[0], args[1]] : args))[1]);\n\n    decorated.keyPrefix = (...keys) => u8aToHex(creator.keyPrefix(...keys));\n\n    decorated.range = decorateMethod((range, ...args) => this._decorateStorageRange(decorated, args, range));\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));\n    decorated.sizeAt = decorateMethod((hash, ...args) => this._rpcCore.state.getStorageSize(getArgs(args), hash)); // FIXME NMap support\n    // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && (creator.meta.type.isMap || creator.meta.type.isDoubleMap)) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, null, args)));\n      decorated.entriesAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapEntries(creator, hash, args)));\n      decorated.entriesPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, null, args)));\n      decorated.keysAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapKeys(creator, hash, args)));\n      decorated.keysPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    }\n\n    if (this.supportMulti) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => this._retrieveMulti(args.map(arg => [creator, arg])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([extractStorageArgs(creator, args)]).pipe(map(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage(extractStorageArgs(creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage(extractStorageArgs(creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = unwrapStorageType(decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe(map(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes\n\n\n  _retrieveMulti(keys) {\n    if (!keys.length) {\n      return of([]);\n    }\n\n    const queryCall = this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;\n    return combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(keys => queryCall(keys))).pipe(map(arrayFlatten));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, args) {\n    assert(iterKey && (meta.type.isMap || meta.type.isDoubleMap || meta.type.isNMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(...args).toHex();\n    const startSubject = new BehaviorSubject(headKey);\n    const queryCall = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);\n    return startSubject.pipe(switchMap(queryCall), map(keys => keys.map(key => key.setMeta(meta, section, method))), tap(keys => {\n      setTimeout(() => {\n        keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n      }, 0);\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map(arrayFlatten));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    assert(iterKey && (meta.type.isMap || meta.type.isDoubleMap || meta.type.isNMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(...opts.args).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe(map(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, args) {\n    const query = at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset);\n    return this._retrieveMapKeys(entry, at, args).pipe(switchMap(keys => keys.length ? combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(query)).pipe(map(valsArr => arrayFlatten(valsArr).map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe(switchMap(keys => keys.length ? this._rpcCore.state.queryStorageAt(keys).pipe(map(valsArr => valsArr.map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;\n\n    const specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString();\n\n    const derives = _objectSpread(_objectSpread({}, this._options.derives), ((_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName !== null && specName !== void 0 ? specName : '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives) || {}); // Pull in derive from api-derive\n\n\n    const derive = decorateDerive(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], this._rx, derives);\n    return decorateSections(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return decorateSections(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/api/base/Decorate.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","BN","decorateDerive","memo","expandMetadata","RpcCore","WsProvider","TypeRegistry","DEFAULT_VERSION","EXTRINSIC_DEFAULT_VERSION","unwrapStorageType","arrayChunk","arrayFlatten","assert","compactStripLength","logger","u8aToHex","BehaviorSubject","combineLatest","of","map","switchMap","tap","toArray","createSubmittable","augmentObject","decorateSections","extractStorageArgs","Events","PAGE_SIZE_K","PAGE_SIZE_V","l","instanceCounter","_instanceId","_registry","Decorate","constructor","options","type","decorateMethod","_options$source","writable","value","__phantom","_consts","_derive","_errors","_events","_extrinsics","_extrinsicType","_genesisHash","_isConnected","_isReady","_options","_query","_queryMulti","_rpc","_rpcCore","_runtimeChain","_runtimeMetadata","_runtimeVersion","_rx","consts","query","tx","_type","_decorateMethod","_rxDecorateMethod","method","registry","thisProvider","provider","clone","rpc","isConnected","hasSubscriptions","createType","params","registerTypes","types","register","supportMulti","state","queryStorageAt","injectMetadata","metadata","fromEmpty","decoratedMeta","_decorateExtrinsics","_decorateStorage","errors","events","_decorateFunctionMeta","input","output","meta","section","toJSON","callIndex","_filterRpc","rpcMethods","additional","methods","t","toString","addUserInterfaces","_decorateRpc","_filterRpcMethods","exposed","hasResults","allKnown","mapping","entries","allKeys","reduce","alias","endpoint","pubsub","unknown","k","includes","deletion","warn","join","sections","out","_sectionName","sectionName","methodName","startsWith","json","raw","_decorateMulti","calls","subscribeStorage","arg","Array","isArray","creator","slice","name","_decorateExtrinsicEntry","decorated","is","other","_decorateStorageEntry","getArgs","args","_decorateStorageCall","at","hash","getStorage","getStorageHash","isPlain","undefined","isMap","isDoubleMap","keyPrefix","range","_decorateStorageRange","size","getStorageSize","sizeAt","iterKey","_retrieveMapEntries","entriesAt","entriesPaged","opts","_retrieveMapEntriesPaged","_retrieveMapKeys","keysAt","keysPaged","_retrieveMapKeysPaged","multi","_retrieveMulti","pipe","data","overrideNoSub","outputType","modifier","isOptional","queryStorage","result","blockHash","isSome","unwrap","toHex","queryCall","isNMap","headKey","startSubject","startKey","getKeysPaged","setMeta","setTimeout","next","complete","pageSize","entry","keyset","valsArr","index","_decorateDeriveRx","_this$_runtimeVersion","_this$_options$typesB","_this$_options$typesB2","_this$_options$typesB3","specName","derives","typesBundle","spec","derive","_decorateDerive"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport BN from 'bn.js';\nimport { decorateDerive } from '@polkadot/api-derive';\nimport { memo } from '@polkadot/api-derive/util';\nimport { expandMetadata } from '@polkadot/metadata';\nimport { RpcCore } from '@polkadot/rpc-core';\nimport { WsProvider } from '@polkadot/rpc-provider';\nimport { TypeRegistry } from '@polkadot/types/create';\nimport { DEFAULT_VERSION as EXTRINSIC_DEFAULT_VERSION } from '@polkadot/types/extrinsic/constants';\nimport { unwrapStorageType } from '@polkadot/types/primitive/StorageKey';\nimport { arrayChunk, arrayFlatten, assert, compactStripLength, logger, u8aToHex } from '@polkadot/util';\nimport { BehaviorSubject, combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap, tap, toArray } from '@polkadot/x-rxjs/operators';\nimport { createSubmittable } from \"../submittable/index.js\";\nimport { augmentObject } from \"../util/augmentObject.js\";\nimport { decorateSections } from \"../util/decorate.js\";\nimport { extractStorageArgs } from \"../util/validate.js\";\nimport { Events } from \"./Events.js\";\n// the max amount of keys/values that we will retrieve at once\nconst PAGE_SIZE_K = 768; // limited since the trie lookups are heavy\n\nconst PAGE_SIZE_V = 256; // limited since the data may be very large\n\nconst l = logger('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = /*#__PURE__*/_classPrivateFieldLooseKey(\"instanceId\");\n\nvar _registry = /*#__PURE__*/_classPrivateFieldLooseKey(\"registry\");\n\nexport class Decorate extends Events {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new BN(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._errors = {};\n    this._events = {};\n    this._extrinsics = void 0;\n    this._extrinsicType = EXTRINSIC_DEFAULT_VERSION;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    _classPrivateFieldLooseBase(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    _classPrivateFieldLooseBase(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new TypeRegistry();\n    this._rx.registry = _classPrivateFieldLooseBase(this, _registry)[_registry];\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type; // The RPC interface decorates the known interfaces on init\n\n    this._rpcCore = new RpcCore(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], _classPrivateFieldLooseBase(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @description Return the current used registry\n   */\n\n\n  get registry() {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return _classPrivateFieldLooseBase(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && _classPrivateFieldLooseBase(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n  /**\n   * @returns `true` if the API decorate multi-key queries\n   */\n\n\n  get supportMulti() {\n    return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;\n  }\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    const decoratedMeta = expandMetadata(registry || _classPrivateFieldLooseBase(this, _registry)[_registry], metadata);\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      augmentObject('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      augmentObject(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    } // this API\n\n\n    augmentObject('query', this._decorateStorage(decoratedMeta, this._decorateMethod), this._query, fromEmpty);\n    augmentObject('consts', decoratedMeta.consts, this._consts, fromEmpty);\n    augmentObject('errors', decoratedMeta.errors, this._errors, fromEmpty);\n    augmentObject('events', decoratedMeta.events, this._events, fromEmpty); // rx\n\n    augmentObject(null, this._decorateStorage(decoratedMeta, this._rxDecorateMethod), this._rx.query, fromEmpty);\n    augmentObject(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  _filterRpc(rpcMethods, additional) {\n    const methods = rpcMethods.methods.map(t => t.toString()); // add any specific user-base RPCs\n\n    if (Object.keys(additional).length !== 0) {\n      this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces\n\n\n      this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);\n\n      this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(k => !allKeys.includes(k));\n    const deletion = allKnown.filter(([k]) => hasResults && !exposed.includes(k) && k !== 'rpc_methods');\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    deletion.forEach(([, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod, input = {}) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName;\n\n      if (!out[sectionName]) {\n        // out and section here are horrors to get right from a typing perspective :(\n        out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n          //  skip subscriptions where we have a non-subscribe interface\n          if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n            section[methodName] = decorateMethod(method, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].json = decorateMethod(method.json, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].raw = decorateMethod(method.raw, {\n              methodName\n            }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            section[methodName].meta = method.meta;\n          }\n\n          return section;\n        }, {});\n      }\n\n      return out;\n    }, input);\n  } // only be called if supportMulti is true\n\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => (this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt)(calls.map(arg => Array.isArray(arg) ? [arg[0].creator, ...arg.slice(1)] : [arg.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = createSubmittable(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // pass through the `.is`\n\n\n    decorated.is = other => method.is(other); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = args => extractStorageArgs(creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, ...args) => this._rpcCore.state.getStorage(getArgs(args), hash));\n    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));\n\n    decorated.is = key => key.section === creator.section && key.method === creator.method;\n\n    decorated.key = (...args) => u8aToHex(compactStripLength(creator(creator.meta.type.isPlain ? undefined : creator.meta.type.isMap ? args[0] : creator.meta.type.isDoubleMap ? [args[0], args[1]] : args))[1]);\n\n    decorated.keyPrefix = (...keys) => u8aToHex(creator.keyPrefix(...keys));\n\n    decorated.range = decorateMethod((range, ...args) => this._decorateStorageRange(decorated, args, range));\n    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));\n    decorated.sizeAt = decorateMethod((hash, ...args) => this._rpcCore.state.getStorageSize(getArgs(args), hash)); // FIXME NMap support\n    // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && (creator.meta.type.isMap || creator.meta.type.isDoubleMap)) {\n      decorated.entries = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, null, args)));\n      decorated.entriesAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapEntries(creator, hash, args)));\n      decorated.entriesPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, null, args)));\n      decorated.keysAt = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], (hash, ...args) => this._retrieveMapKeys(creator, hash, args)));\n      decorated.keysPaged = decorateMethod(memo(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    }\n\n    if (this.supportMulti) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => this._retrieveMulti(args.map(arg => [creator, arg])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([extractStorageArgs(creator, args)]).pipe(map(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage(extractStorageArgs(creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage(extractStorageArgs(creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = unwrapStorageType(decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe(map(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes\n\n\n  _retrieveMulti(keys) {\n    if (!keys.length) {\n      return of([]);\n    }\n\n    const queryCall = this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;\n    return combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(keys => queryCall(keys))).pipe(map(arrayFlatten));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, args) {\n    assert(iterKey && (meta.type.isMap || meta.type.isDoubleMap || meta.type.isNMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(...args).toHex();\n    const startSubject = new BehaviorSubject(headKey);\n    const queryCall = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);\n    return startSubject.pipe(switchMap(queryCall), map(keys => keys.map(key => key.setMeta(meta, section, method))), tap(keys => {\n      setTimeout(() => {\n        keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();\n      }, 0);\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map(arrayFlatten));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    assert(iterKey && (meta.type.isMap || meta.type.isDoubleMap || meta.type.isNMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(...opts.args).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe(map(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, args) {\n    const query = at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset);\n    return this._retrieveMapKeys(entry, at, args).pipe(switchMap(keys => keys.length ? combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(query)).pipe(map(valsArr => arrayFlatten(valsArr).map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe(switchMap(keys => keys.length ? this._rpcCore.state.queryStorageAt(keys).pipe(map(valsArr => valsArr.map((value, index) => [keys[index], value]))) : of([])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;\n\n    const specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString();\n\n    const derives = _objectSpread(_objectSpread({}, this._options.derives), ((_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName !== null && specName !== void 0 ? specName : '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives) || {}); // Pull in derive from api-derive\n\n\n    const derive = decorateDerive(_classPrivateFieldLooseBase(this, _instanceId)[_instanceId], this._rx, derives);\n    return decorateSections(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return decorateSections(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}"]},"metadata":{},"sourceType":"module"}