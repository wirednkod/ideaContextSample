{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-var-requires */\n// we are attempting to avoid circular refs, hence the Metadata path import\n\n\nimport { decorateConstants, decorateExtrinsics } from '@polkadot/metadata/decorate';\nimport { Metadata } from '@polkadot/metadata/Metadata';\nimport { assert, assertReturn, BN_ZERO, formatBalance, isFunction, isString, isU8a, logger, stringCamelCase, stringify, u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { Json } from \"../codec/Json.js\";\nimport { Raw } from \"../codec/Raw.js\";\nimport { defaultExtensions, expandExtensionTypes, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { DoNotConstruct } from \"../primitive/DoNotConstruct.js\";\nimport { createClass, getTypeClass } from \"./createClass.js\";\nimport { createType } from \"./createType.js\";\nimport { getTypeDef } from \"./getTypeDef.js\";\nconst l = logger('registry'); // create error mapping from metadata\n\nfunction injectErrors(_, metadata, metadataErrors) {\n  const modules = metadata.asLatest.modules; // decorate the errors\n\n  modules.forEach((section, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? section.index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(section.name);\n    section.errors.forEach(({\n      documentation,\n      name\n    }, index) => {\n      const eventIndex = new Uint8Array([sectionIndex, index]);\n      metadataErrors[u8aToHex(eventIndex)] = {\n        documentation: documentation.map(d => d.toString()),\n        index,\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      };\n    });\n  });\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, metadata, metadataEvents) {\n  const modules = metadata.asLatest.modules; // decorate the events\n\n  modules.filter(({\n    events\n  }) => events.isSome).forEach((section, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? section.index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(section.name);\n    section.events.unwrap().forEach((meta, methodIndex) => {\n      const methodName = meta.name.toString();\n      const eventIndex = new Uint8Array([sectionIndex, methodIndex]); // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n\n      const typeDef = meta.args.map(arg => getTypeDef(arg));\n      let Types = [];\n\n      try {\n        Types = typeDef.map(typeDef => getTypeClass(registry, typeDef));\n      } catch (error) {\n        l.error(error);\n      }\n\n      metadataEvents[u8aToHex(eventIndex)] = class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, Types, typeDef, meta, sectionName, methodName);\n        }\n\n      };\n    });\n  });\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, metadata, metadataCalls) {\n  const extrinsics = decorateExtrinsics(registry, metadata.asLatest, metadata.version); // decorate the extrinsics\n\n  Object.values(extrinsics).forEach(methods => Object.values(methods).forEach(method => {\n    metadataCalls[u8aToHex(method.callIndex)] = method;\n  }));\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  var _constants$system;\n\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = (_constants$system = constants.system) === null || _constants$system === void 0 ? void 0 : _constants$system.ss58Prefix;\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createType('ChainProperties', {\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  });\n}\n\nvar _classes = /*#__PURE__*/_classPrivateFieldLooseKey(\"classes\");\n\nvar _definitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"definitions\");\n\nvar _metadataCalls = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataCalls\");\n\nvar _metadataErrors = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataErrors\");\n\nvar _metadataEvents = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataEvents\");\n\nvar _unknownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"unknownTypes\");\n\nvar _chainProperties = /*#__PURE__*/_classPrivateFieldLooseKey(\"chainProperties\");\n\nvar _hasher = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasher\");\n\nvar _knownDefaults = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefaults\");\n\nvar _knownDefinitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefinitions\");\n\nvar _knownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownTypes\");\n\nvar _signedExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"signedExtensions\");\n\nvar _userExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"userExtensions\");\n\nexport class TypeRegistry {\n  constructor(createdAtHash) {\n    Object.defineProperty(this, _classes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _definitions, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _metadataCalls, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataErrors, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataEvents, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _unknownTypes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _chainProperties, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _hasher, {\n      writable: true,\n      value: blake2AsU8a\n    });\n    Object.defineProperty(this, _knownDefaults, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownDefinitions, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownTypes, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _signedExtensions, {\n      writable: true,\n      value: defaultExtensions\n    });\n    Object.defineProperty(this, _userExtensions, {\n      writable: true,\n      value: void 0\n    });\n    this.createdAtHash = void 0;\n    _classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults] = _objectSpread({\n      Json,\n      Metadata,\n      Raw\n    }, baseTypes);\n    _classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions] = definitions;\n    this.init();\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  init() {\n    // start clean\n    _classPrivateFieldLooseBase(this, _classes)[_classes] = new Map();\n    _classPrivateFieldLooseBase(this, _definitions)[_definitions] = new Map();\n    _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes] = new Map();\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = {}; // register know, first classes then on-demand-created definitions\n\n    this.register(_classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults]);\n    Object.values(_classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions]).forEach(({\n      types\n    }) => this.register(types));\n    return this;\n  }\n\n  get chainDecimals() {\n    var _classPrivateFieldLoo;\n\n    if ((_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo !== void 0 && _classPrivateFieldLoo.tokenDecimals.isSome) {\n      const allDecimals = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _classPrivateFieldLoo2;\n\n    return (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo2 !== void 0 && _classPrivateFieldLoo2.ss58Format.isSome ? _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _classPrivateFieldLoo3;\n\n    if ((_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo3 !== void 0 && _classPrivateFieldLoo3.tokenSymbol.isSome) {\n      const allTokens = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(s => s.toString());\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n\n  get knownTypes() {\n    return _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes];\n  }\n\n  get unknownTypes() {\n    return [..._classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].keys()];\n  }\n\n  get signedExtensions() {\n    return _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions];\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return createClass(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createType(this, type, ...params);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const hexIndex = u8aToHex(callIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls][hexIndex], `findMetaCall: Unable to find Call with index ${hexIndex}/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const hexIndex = u8aToHex(isU8a(errorIndex) ? errorIndex : new Uint8Array([errorIndex.index.toNumber(), errorIndex.error.toNumber()]));\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors][hexIndex], `findMetaError: Unable to find Error with index ${hexIndex}/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const hexIndex = u8aToHex(eventIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents][hexIndex], `findMetaEvent: Unable to find Event with index ${hexIndex}/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown) {\n    let Type = _classPrivateFieldLooseBase(this, _classes)[_classes].get(name); // we have not already created the type, attempt it\n\n\n    if (!Type) {\n      const definition = _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(name);\n\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClass(this, definition);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n\n        _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].set(name, true);\n\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, Type);\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties];\n  }\n\n  getClassName(clazz) {\n    const entry = [..._classPrivateFieldLooseBase(this, _classes)[_classes].entries()].find(([, test]) => test === clazz);\n    return entry ? entry[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _classPrivateFieldLoo4, _classPrivateFieldLoo5, _classPrivateFieldLoo6, _classPrivateFieldLoo7, _classPrivateFieldLoo8;\n\n    return (_classPrivateFieldLoo4 = _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes]) === null || _classPrivateFieldLoo4 === void 0 ? void 0 : (_classPrivateFieldLoo5 = _classPrivateFieldLoo4.typesBundle) === null || _classPrivateFieldLoo5 === void 0 ? void 0 : (_classPrivateFieldLoo6 = _classPrivateFieldLoo5.spec) === null || _classPrivateFieldLoo6 === void 0 ? void 0 : (_classPrivateFieldLoo7 = _classPrivateFieldLoo6[specName]) === null || _classPrivateFieldLoo7 === void 0 ? void 0 : (_classPrivateFieldLoo8 = _classPrivateFieldLoo7.instances) === null || _classPrivateFieldLoo8 === void 0 ? void 0 : _classPrivateFieldLoo8[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    return assertReturn(this.get(name), msg || `type ${name} not found`);\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'payload', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'extrinsic', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  hasClass(name) {\n    return _classPrivateFieldLooseBase(this, _classes)[_classes].has(name);\n  }\n\n  hasDef(name) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].has(name);\n  }\n\n  hasType(name) {\n    return !_classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', _classPrivateFieldLooseBase(this, _hasher)[_hasher](data));\n  } // eslint-disable-next-line no-dupe-class-members\n\n\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      assert(isFunction(arg2), () => `Expected class definition passed to '${arg1}' registration`);\n      assert(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);\n\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    Object.entries(obj).forEach(([name, type]) => {\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n        assert(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it\n\n        if (_classPrivateFieldLooseBase(this, _classes)[_classes].has(name)) {\n          _classPrivateFieldLooseBase(this, _classes)[_classes].delete(name);\n        }\n\n        _classPrivateFieldLooseBase(this, _definitions)[_definitions].set(name, def);\n      }\n    });\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties] = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    _classPrivateFieldLooseBase(this, _hasher)[_hasher] = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = knownTypes;\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    injectExtrinsics(this, metadata, _classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls]);\n    injectErrors(this, metadata, _classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors]);\n    injectEvents(this, metadata, _classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents]); // setup the available extensions\n\n    this.setSignedExtensions(signedExtensions || (metadata.asLatest.extrinsic.version.gt(BN_ZERO) ? metadata.asLatest.extrinsic.signedExtensions.map(key => key.toString()) : defaultExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = defaultExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions] = signedExtensions;\n    _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions] = userExtensions;\n    const unknown = findUnknownExtensions(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/types/create/registry.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","decorateConstants","decorateExtrinsics","Metadata","assert","assertReturn","BN_ZERO","formatBalance","isFunction","isString","isU8a","logger","stringCamelCase","stringify","u8aToHex","blake2AsU8a","Json","Raw","defaultExtensions","expandExtensionTypes","findUnknownExtensions","GenericEventData","baseTypes","definitions","DoNotConstruct","createClass","getTypeClass","createType","getTypeDef","l","injectErrors","_","metadata","metadataErrors","modules","asLatest","section","_sectionIndex","sectionIndex","version","index","toNumber","sectionName","name","errors","documentation","eventIndex","Uint8Array","map","d","toString","method","injectEvents","registry","metadataEvents","events","isSome","unwrap","meta","methodIndex","methodName","typeDef","args","arg","Types","error","constructor","value","injectExtrinsics","metadataCalls","extrinsics","values","methods","callIndex","extractProperties","_constants$system","original","getChainProperties","constants","ss58Format","system","ss58Prefix","tokenDecimals","tokenSymbol","_classes","_definitions","_metadataCalls","_metadataErrors","_metadataEvents","_unknownTypes","_chainProperties","_hasher","_knownDefaults","_knownDefinitions","_knownTypes","_signedExtensions","_userExtensions","TypeRegistry","createdAtHash","writable","Map","init","register","types","chainDecimals","_classPrivateFieldLoo","allDecimals","b","chainSS58","_classPrivateFieldLoo2","undefined","chainTokens","_classPrivateFieldLoo3","allTokens","s","getDefaults","unit","knownTypes","unknownTypes","signedExtensions","type","params","findMetaCall","hexIndex","findMetaError","errorIndex","findMetaEvent","get","withUnknown","Type","definition","BaseType","warn","set","with","getClassName","clazz","entry","entries","find","test","getDefinition","typeName","getModuleInstances","specName","moduleName","_classPrivateFieldLoo4","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_classPrivateFieldLoo7","_classPrivateFieldLoo8","typesBundle","spec","instances","getOrThrow","msg","getOrUnknown","getSignedExtensionExtra","getSignedExtensionTypes","hasClass","has","hasDef","hasType","hash","data","arg1","arg2","_registerObject","obj","def","delete","setChainProperties","properties","setHasher","hasher","setKnownTypes","setMetadata","userExtensions","setSignedExtensions","extrinsic","gt","unknown","join"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-var-requires */\n// we are attempting to avoid circular refs, hence the Metadata path import\nimport { decorateConstants, decorateExtrinsics } from '@polkadot/metadata/decorate';\nimport { Metadata } from '@polkadot/metadata/Metadata';\nimport { assert, assertReturn, BN_ZERO, formatBalance, isFunction, isString, isU8a, logger, stringCamelCase, stringify, u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { Json } from \"../codec/Json.js\";\nimport { Raw } from \"../codec/Raw.js\";\nimport { defaultExtensions, expandExtensionTypes, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { DoNotConstruct } from \"../primitive/DoNotConstruct.js\";\nimport { createClass, getTypeClass } from \"./createClass.js\";\nimport { createType } from \"./createType.js\";\nimport { getTypeDef } from \"./getTypeDef.js\";\nconst l = logger('registry'); // create error mapping from metadata\n\nfunction injectErrors(_, metadata, metadataErrors) {\n  const modules = metadata.asLatest.modules; // decorate the errors\n\n  modules.forEach((section, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? section.index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(section.name);\n    section.errors.forEach(({\n      documentation,\n      name\n    }, index) => {\n      const eventIndex = new Uint8Array([sectionIndex, index]);\n      metadataErrors[u8aToHex(eventIndex)] = {\n        documentation: documentation.map(d => d.toString()),\n        index,\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      };\n    });\n  });\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, metadata, metadataEvents) {\n  const modules = metadata.asLatest.modules; // decorate the events\n\n  modules.filter(({\n    events\n  }) => events.isSome).forEach((section, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? section.index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(section.name);\n    section.events.unwrap().forEach((meta, methodIndex) => {\n      const methodName = meta.name.toString();\n      const eventIndex = new Uint8Array([sectionIndex, methodIndex]); // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n\n      const typeDef = meta.args.map(arg => getTypeDef(arg));\n      let Types = [];\n\n      try {\n        Types = typeDef.map(typeDef => getTypeClass(registry, typeDef));\n      } catch (error) {\n        l.error(error);\n      }\n\n      metadataEvents[u8aToHex(eventIndex)] = class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, Types, typeDef, meta, sectionName, methodName);\n        }\n\n      };\n    });\n  });\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, metadata, metadataCalls) {\n  const extrinsics = decorateExtrinsics(registry, metadata.asLatest, metadata.version); // decorate the extrinsics\n\n  Object.values(extrinsics).forEach(methods => Object.values(methods).forEach(method => {\n    metadataCalls[u8aToHex(method.callIndex)] = method;\n  }));\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  var _constants$system;\n\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = (_constants$system = constants.system) === null || _constants$system === void 0 ? void 0 : _constants$system.ss58Prefix;\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createType('ChainProperties', {\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  });\n}\n\nvar _classes = /*#__PURE__*/_classPrivateFieldLooseKey(\"classes\");\n\nvar _definitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"definitions\");\n\nvar _metadataCalls = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataCalls\");\n\nvar _metadataErrors = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataErrors\");\n\nvar _metadataEvents = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataEvents\");\n\nvar _unknownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"unknownTypes\");\n\nvar _chainProperties = /*#__PURE__*/_classPrivateFieldLooseKey(\"chainProperties\");\n\nvar _hasher = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasher\");\n\nvar _knownDefaults = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefaults\");\n\nvar _knownDefinitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefinitions\");\n\nvar _knownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownTypes\");\n\nvar _signedExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"signedExtensions\");\n\nvar _userExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"userExtensions\");\n\nexport class TypeRegistry {\n  constructor(createdAtHash) {\n    Object.defineProperty(this, _classes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _definitions, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _metadataCalls, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataErrors, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataEvents, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _unknownTypes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _chainProperties, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _hasher, {\n      writable: true,\n      value: blake2AsU8a\n    });\n    Object.defineProperty(this, _knownDefaults, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownDefinitions, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownTypes, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _signedExtensions, {\n      writable: true,\n      value: defaultExtensions\n    });\n    Object.defineProperty(this, _userExtensions, {\n      writable: true,\n      value: void 0\n    });\n    this.createdAtHash = void 0;\n    _classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults] = _objectSpread({\n      Json,\n      Metadata,\n      Raw\n    }, baseTypes);\n    _classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions] = definitions;\n    this.init();\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  init() {\n    // start clean\n    _classPrivateFieldLooseBase(this, _classes)[_classes] = new Map();\n    _classPrivateFieldLooseBase(this, _definitions)[_definitions] = new Map();\n    _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes] = new Map();\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = {}; // register know, first classes then on-demand-created definitions\n\n    this.register(_classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults]);\n    Object.values(_classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions]).forEach(({\n      types\n    }) => this.register(types));\n    return this;\n  }\n\n  get chainDecimals() {\n    var _classPrivateFieldLoo;\n\n    if ((_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo !== void 0 && _classPrivateFieldLoo.tokenDecimals.isSome) {\n      const allDecimals = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _classPrivateFieldLoo2;\n\n    return (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo2 !== void 0 && _classPrivateFieldLoo2.ss58Format.isSome ? _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _classPrivateFieldLoo3;\n\n    if ((_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo3 !== void 0 && _classPrivateFieldLoo3.tokenSymbol.isSome) {\n      const allTokens = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(s => s.toString());\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n\n  get knownTypes() {\n    return _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes];\n  }\n\n  get unknownTypes() {\n    return [..._classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].keys()];\n  }\n\n  get signedExtensions() {\n    return _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions];\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return createClass(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createType(this, type, ...params);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const hexIndex = u8aToHex(callIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls][hexIndex], `findMetaCall: Unable to find Call with index ${hexIndex}/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const hexIndex = u8aToHex(isU8a(errorIndex) ? errorIndex : new Uint8Array([errorIndex.index.toNumber(), errorIndex.error.toNumber()]));\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors][hexIndex], `findMetaError: Unable to find Error with index ${hexIndex}/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const hexIndex = u8aToHex(eventIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents][hexIndex], `findMetaEvent: Unable to find Event with index ${hexIndex}/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown) {\n    let Type = _classPrivateFieldLooseBase(this, _classes)[_classes].get(name); // we have not already created the type, attempt it\n\n\n    if (!Type) {\n      const definition = _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(name);\n\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClass(this, definition);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n\n        _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].set(name, true);\n\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, Type);\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties];\n  }\n\n  getClassName(clazz) {\n    const entry = [..._classPrivateFieldLooseBase(this, _classes)[_classes].entries()].find(([, test]) => test === clazz);\n    return entry ? entry[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _classPrivateFieldLoo4, _classPrivateFieldLoo5, _classPrivateFieldLoo6, _classPrivateFieldLoo7, _classPrivateFieldLoo8;\n\n    return (_classPrivateFieldLoo4 = _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes]) === null || _classPrivateFieldLoo4 === void 0 ? void 0 : (_classPrivateFieldLoo5 = _classPrivateFieldLoo4.typesBundle) === null || _classPrivateFieldLoo5 === void 0 ? void 0 : (_classPrivateFieldLoo6 = _classPrivateFieldLoo5.spec) === null || _classPrivateFieldLoo6 === void 0 ? void 0 : (_classPrivateFieldLoo7 = _classPrivateFieldLoo6[specName]) === null || _classPrivateFieldLoo7 === void 0 ? void 0 : (_classPrivateFieldLoo8 = _classPrivateFieldLoo7.instances) === null || _classPrivateFieldLoo8 === void 0 ? void 0 : _classPrivateFieldLoo8[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    return assertReturn(this.get(name), msg || `type ${name} not found`);\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'payload', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'extrinsic', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  hasClass(name) {\n    return _classPrivateFieldLooseBase(this, _classes)[_classes].has(name);\n  }\n\n  hasDef(name) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].has(name);\n  }\n\n  hasType(name) {\n    return !_classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', _classPrivateFieldLooseBase(this, _hasher)[_hasher](data));\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      assert(isFunction(arg2), () => `Expected class definition passed to '${arg1}' registration`);\n      assert(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);\n\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    Object.entries(obj).forEach(([name, type]) => {\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n        assert(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it\n\n        if (_classPrivateFieldLooseBase(this, _classes)[_classes].has(name)) {\n          _classPrivateFieldLooseBase(this, _classes)[_classes].delete(name);\n        }\n\n        _classPrivateFieldLooseBase(this, _definitions)[_definitions].set(name, def);\n      }\n    });\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties] = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    _classPrivateFieldLooseBase(this, _hasher)[_hasher] = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = knownTypes;\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    injectExtrinsics(this, metadata, _classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls]);\n    injectErrors(this, metadata, _classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors]);\n    injectEvents(this, metadata, _classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents]); // setup the available extensions\n\n    this.setSignedExtensions(signedExtensions || (metadata.asLatest.extrinsic.version.gt(BN_ZERO) ? metadata.asLatest.extrinsic.signedExtensions.map(key => key.toString()) : defaultExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = defaultExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions] = signedExtensions;\n    _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions] = userExtensions;\n    const unknown = findUnknownExtensions(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}