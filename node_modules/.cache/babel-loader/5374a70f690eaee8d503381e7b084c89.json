{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function _ownSlashes(instanceId, api) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return memo(instanceId, (accountId, eras, _withActive) => eras.length ? api.queryMulti([...eras.map(era => [api.query.staking.validatorSlashInEra, [era, accountId]]), ...eras.map(era => [api.query.staking.nominatorSlashInEra, [era, accountId]])]).pipe(map(values => eras.map((era, index) => ({\n    era,\n    total: values[index].isSome ? values[index].unwrap()[1] : values[index + eras.length].unwrapOrDefault()\n  })))) : of([]));\n}\nexport function ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownSlashes(accountId, [era], true).pipe(map(([first]) => first)));\n}\nexport function ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownSlashes(accountId, eras, withActive)));\n  });\n}","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/api-derive/staking/ownSlashes.js"],"names":["of","map","switchMap","memo","_ownSlashes","instanceId","api","accountId","eras","_withActive","length","queryMulti","era","query","staking","validatorSlashInEra","nominatorSlashInEra","pipe","values","index","total","isSome","unwrap","unwrapOrDefault","ownSlash","derive","first","ownSlashes","withActive","erasHistoric"],"mappings":"AAAA;AACA;AACA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,4BAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,GAAjC,EAAsC;AAC3C;AACA,SAAOH,IAAI,CAACE,UAAD,EAAa,CAACE,SAAD,EAAYC,IAAZ,EAAkBC,WAAlB,KAAkCD,IAAI,CAACE,MAAL,GAAcJ,GAAG,CAACK,UAAJ,CAAe,CAAC,GAAGH,IAAI,CAACP,GAAL,CAASW,GAAG,IAAI,CAACN,GAAG,CAACO,KAAJ,CAAUC,OAAV,CAAkBC,mBAAnB,EAAwC,CAACH,GAAD,EAAML,SAAN,CAAxC,CAAhB,CAAJ,EAAgF,GAAGC,IAAI,CAACP,GAAL,CAASW,GAAG,IAAI,CAACN,GAAG,CAACO,KAAJ,CAAUC,OAAV,CAAkBE,mBAAnB,EAAwC,CAACJ,GAAD,EAAML,SAAN,CAAxC,CAAhB,CAAnF,CAAf,EAA+KU,IAA/K,CAAoLhB,GAAG,CAACiB,MAAM,IAAIV,IAAI,CAACP,GAAL,CAAS,CAACW,GAAD,EAAMO,KAAN,MAAiB;AAClSP,IAAAA,GADkS;AAElSQ,IAAAA,KAAK,EAAEF,MAAM,CAACC,KAAD,CAAN,CAAcE,MAAd,GAAuBH,MAAM,CAACC,KAAD,CAAN,CAAcG,MAAd,GAAuB,CAAvB,CAAvB,GAAmDJ,MAAM,CAACC,KAAK,GAAGX,IAAI,CAACE,MAAd,CAAN,CAA4Ba,eAA5B;AAFwO,GAAjB,CAAT,CAAX,CAAvL,CAAd,GAGlDvB,EAAE,CAAC,EAAD,CAHC,CAAX;AAID;AACD,OAAO,SAASwB,QAAT,CAAkBnB,UAAlB,EAA8BC,GAA9B,EAAmC;AACxC,SAAOH,IAAI,CAACE,UAAD,EAAa,CAACE,SAAD,EAAYK,GAAZ,KAAoBN,GAAG,CAACmB,MAAJ,CAAWX,OAAX,CAAmBV,WAAnB,CAA+BG,SAA/B,EAA0C,CAACK,GAAD,CAA1C,EAAiD,IAAjD,EAAuDK,IAAvD,CAA4DhB,GAAG,CAAC,CAAC,CAACyB,KAAD,CAAD,KAAaA,KAAd,CAA/D,CAAjC,CAAX;AACD;AACD,OAAO,SAASC,UAAT,CAAoBtB,UAApB,EAAgCC,GAAhC,EAAqC;AAC1C,SAAOH,IAAI,CAACE,UAAD,EAAa,CAACE,SAAD,EAAYqB,UAAU,GAAG,KAAzB,KAAmC;AACzD,WAAOtB,GAAG,CAACmB,MAAJ,CAAWX,OAAX,CAAmBe,YAAnB,CAAgCD,UAAhC,EAA4CX,IAA5C,CAAiDf,SAAS,CAACM,IAAI,IAAIF,GAAG,CAACmB,MAAJ,CAAWX,OAAX,CAAmBV,WAAnB,CAA+BG,SAA/B,EAA0CC,IAA1C,EAAgDoB,UAAhD,CAAT,CAA1D,CAAP;AACD,GAFU,CAAX;AAGD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function _ownSlashes(instanceId, api) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return memo(instanceId, (accountId, eras, _withActive) => eras.length ? api.queryMulti([...eras.map(era => [api.query.staking.validatorSlashInEra, [era, accountId]]), ...eras.map(era => [api.query.staking.nominatorSlashInEra, [era, accountId]])]).pipe(map(values => eras.map((era, index) => ({\n    era,\n    total: values[index].isSome ? values[index].unwrap()[1] : values[index + eras.length].unwrapOrDefault()\n  })))) : of([]));\n}\nexport function ownSlash(instanceId, api) {\n  return memo(instanceId, (accountId, era) => api.derive.staking._ownSlashes(accountId, [era], true).pipe(map(([first]) => first)));\n}\nexport function ownSlashes(instanceId, api) {\n  return memo(instanceId, (accountId, withActive = false) => {\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(eras => api.derive.staking._ownSlashes(accountId, eras, withActive)));\n  });\n}"]},"metadata":{},"sourceType":"module"}