{"ast":null,"code":"var _jsxFileName = \"/home/wirednkod/Documents/repos/mine/sampleContext/src/Sample1.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useStore } from './store';\nimport { useGetApi } from './useApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sample1() {\n  _s();\n\n  const {\n    isLoading,\n    executeCb\n  } = useGetApi();\n  const {\n    state,\n    dispatch\n  } = useStore();\n  useEffect(() => {\n    let smthng = executeCb();\n    dispatch({\n      type: \"set\",\n      set: smthng\n    });\n  }, [dispatch, executeCb]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? 'isLoading' : 'is not Loading'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data, \" - \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\",\n        message: \"Incremented\"\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\",\n        message: \"Decremented\"\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"reset\",\n        message: \"Reset\"\n      }),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Sample1, \"Cod9ZgOSBAVFrsXTRZPY65Jgs4E=\", false, function () {\n  return [useGetApi, useStore];\n});\n\n_c = Sample1;\nexport default Sample1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample1\");","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/src/Sample1.js"],"names":["useEffect","useStore","useGetApi","Sample1","isLoading","executeCb","state","dispatch","smthng","type","set","data","count","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BH,SAAS,EAA1C;AACA,QAAM;AAACI,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,GAAGH,SAAS,EAAtB;AACAE,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,GAAG,EAAEF;AAAnB,KAAD,CAAR;AACD,GAHQ,EAGN,CAACD,QAAD,EAAWF,SAAX,CAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,gBAAMD,SAAS,GAAG,WAAH,GAAiB;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAMO,IAAN,SAAeL,KAAK,CAACM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAML,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,WAAP;AAAoBI,QAAAA,OAAO,EAAC;AAA5B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,WAAP;AAAoBI,QAAAA,OAAO,EAAE;AAA7B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,OAAP;AAAgBI,QAAAA,OAAO,EAAE;AAAzB,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GAlBQV,O;UAC0BD,S,EACPD,Q;;;KAFnBE,O;AAoBT,eAAeA,OAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useStore } from './store';\nimport { useGetApi } from './useApi';\n\nfunction Sample1() {\n  const { isLoading, executeCb } = useGetApi();\n  const {state, dispatch} = useStore();\n\n  useEffect(() => {\n    let smthng = executeCb();\n    dispatch({type: \"set\", set: smthng})\n  }, [dispatch, executeCb])\n  \n  return (\n    <>\n      <div>{isLoading ? 'isLoading' : 'is not Loading'}</div>\n      <div>{data} - {state.count}</div>\n      <button onClick={() => dispatch({type: \"increment\", message:\"Incremented\"})}>+</button>\n      <button onClick={() => dispatch({type: \"decrement\", message: \"Decremented\"})}>-</button>\n      <button onClick={() => dispatch({type: \"reset\", message: \"Reset\"})}>Reset</button>\n    </>\n  );\n}\n\nexport default Sample1;\n"]},"metadata":{},"sourceType":"module"}