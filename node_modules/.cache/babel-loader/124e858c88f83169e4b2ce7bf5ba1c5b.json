{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// type overrides for modules (where duplication between modules exist)\nconst typesModules = {\n  assets: {\n    Approval: 'AssetApproval',\n    ApprovalKey: 'AssetApprovalKey',\n    Balance: 'TAssetBalance',\n    DestroyWitness: 'AssetDestroyWitness'\n  },\n  babe: {\n    EquivocationProof: 'BabeEquivocationProof'\n  },\n  balances: {\n    Status: 'BalanceStatus'\n  },\n  contracts: {\n    StorageKey: 'ContractStorageKey'\n  },\n  electionProviderMultiPhase: {\n    Phase: 'ElectionPhase'\n  },\n  ethereum: {\n    Block: 'EthBlock',\n    Header: 'EthHeader',\n    Receipt: 'EthReceipt',\n    Transaction: 'EthTransaction',\n    TransactionStatus: 'EthTransactionStatus'\n  },\n  evm: {\n    Account: 'EvmAccount',\n    Log: 'EvmLog',\n    Vicinity: 'EvmVicinity'\n  },\n  grandpa: {\n    Equivocation: 'GrandpaEquivocation',\n    EquivocationProof: 'GrandpaEquivocationProof'\n  },\n  identity: {\n    Judgement: 'IdentityJudgement'\n  },\n  inclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parachains: {\n    Id: 'ParaId'\n  },\n  parasInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  proposeParachain: {\n    Proposal: 'ParachainProposal'\n  },\n  proxy: {\n    Announcement: 'ProxyAnnouncement'\n  },\n  scheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  shared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  society: {\n    Judgement: 'SocietyJudgement',\n    Vote: 'SocietyVote'\n  },\n  staking: {\n    Compact: 'CompactAssignments'\n  },\n  treasury: {\n    Proposal: 'TreasuryProposal'\n  }\n};\nexport default typesModules;","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/types-known/modules.js"],"names":["typesModules","assets","Approval","ApprovalKey","Balance","DestroyWitness","babe","EquivocationProof","balances","Status","contracts","StorageKey","electionProviderMultiPhase","Phase","ethereum","Block","Header","Receipt","Transaction","TransactionStatus","evm","Account","Log","Vicinity","grandpa","Equivocation","identity","Judgement","inclusion","ValidatorIndex","parachains","Id","parasInclusion","parasScheduler","parasShared","proposeParachain","Proposal","proxy","Announcement","scheduler","shared","society","Vote","staking","Compact","treasury"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,eADJ;AAENC,IAAAA,WAAW,EAAE,kBAFP;AAGNC,IAAAA,OAAO,EAAE,eAHH;AAINC,IAAAA,cAAc,EAAE;AAJV,GADW;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,iBAAiB,EAAE;AADf,GAPa;AAUnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GAVS;AAanBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GAbQ;AAgBnBC,EAAAA,0BAA0B,EAAE;AAC1BC,IAAAA,KAAK,EAAE;AADmB,GAhBT;AAmBnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,UADC;AAERC,IAAAA,MAAM,EAAE,WAFA;AAGRC,IAAAA,OAAO,EAAE,YAHD;AAIRC,IAAAA,WAAW,EAAE,gBAJL;AAKRC,IAAAA,iBAAiB,EAAE;AALX,GAnBS;AA0BnBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,YADN;AAEHC,IAAAA,GAAG,EAAE,QAFF;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GA1Bc;AA+BnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,qBADP;AAEPlB,IAAAA,iBAAiB,EAAE;AAFZ,GA/BU;AAmCnBmB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AADH,GAnCS;AAsCnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE;AADP,GAtCQ;AAyCnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,EAAE,EAAE;AADM,GAzCO;AA4CnBC,EAAAA,cAAc,EAAE;AACdH,IAAAA,cAAc,EAAE;AADF,GA5CG;AA+CnBI,EAAAA,cAAc,EAAE;AACdJ,IAAAA,cAAc,EAAE;AADF,GA/CG;AAkDnBK,EAAAA,WAAW,EAAE;AACXL,IAAAA,cAAc,EAAE;AADL,GAlDM;AAqDnBM,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,QAAQ,EAAE;AADM,GArDC;AAwDnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT,GAxDY;AA2DnBC,EAAAA,SAAS,EAAE;AACTV,IAAAA,cAAc,EAAE;AADP,GA3DQ;AA8DnBW,EAAAA,MAAM,EAAE;AACNX,IAAAA,cAAc,EAAE;AADV,GA9DW;AAiEnBY,EAAAA,OAAO,EAAE;AACPd,IAAAA,SAAS,EAAE,kBADJ;AAEPe,IAAAA,IAAI,EAAE;AAFC,GAjEU;AAqEnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GArEU;AAwEnBC,EAAAA,QAAQ,EAAE;AACRT,IAAAA,QAAQ,EAAE;AADF;AAxES,CAArB;AA4EA,eAAepC,YAAf","sourcesContent":["// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// type overrides for modules (where duplication between modules exist)\nconst typesModules = {\n  assets: {\n    Approval: 'AssetApproval',\n    ApprovalKey: 'AssetApprovalKey',\n    Balance: 'TAssetBalance',\n    DestroyWitness: 'AssetDestroyWitness'\n  },\n  babe: {\n    EquivocationProof: 'BabeEquivocationProof'\n  },\n  balances: {\n    Status: 'BalanceStatus'\n  },\n  contracts: {\n    StorageKey: 'ContractStorageKey'\n  },\n  electionProviderMultiPhase: {\n    Phase: 'ElectionPhase'\n  },\n  ethereum: {\n    Block: 'EthBlock',\n    Header: 'EthHeader',\n    Receipt: 'EthReceipt',\n    Transaction: 'EthTransaction',\n    TransactionStatus: 'EthTransactionStatus'\n  },\n  evm: {\n    Account: 'EvmAccount',\n    Log: 'EvmLog',\n    Vicinity: 'EvmVicinity'\n  },\n  grandpa: {\n    Equivocation: 'GrandpaEquivocation',\n    EquivocationProof: 'GrandpaEquivocationProof'\n  },\n  identity: {\n    Judgement: 'IdentityJudgement'\n  },\n  inclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parachains: {\n    Id: 'ParaId'\n  },\n  parasInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  proposeParachain: {\n    Proposal: 'ParachainProposal'\n  },\n  proxy: {\n    Announcement: 'ProxyAnnouncement'\n  },\n  scheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  shared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  society: {\n    Judgement: 'SocietyJudgement',\n    Vote: 'SocietyVote'\n  },\n  staking: {\n    Compact: 'CompactAssignments'\n  },\n  treasury: {\n    Proposal: 'TreasuryProposal'\n  }\n};\nexport default typesModules;"]},"metadata":{},"sourceType":"module"}