{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const getTodos = async () => {\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await fetch('https://jsonplaceholder.typicode.com/todos');\n  console.log('data', data); // add transformers here if needed\n\n  return data;\n};\nexport const useGetTodos = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(0);\n\n  const execute = async () => {\n    try {\n      setIsLoading(true);\n      const todos = getTodos();\n      setData(todos);\n      return todos;\n    } catch (e) {\n      setError(e);\n      setIsLoading(false);\n      throw e;\n    }\n  };\n\n  return {\n    isLoading,\n    error,\n    data,\n    execute: useCallback(execute, []) // to avoid infinite calls when inside a `useEffect`\n\n  };\n};\n\n_s(useGetTodos, \"+hJCLURRaFwB5Yc35wJDCGJXr5Q=\");","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/src/useTodo.js"],"names":["useState","useCallback","getTodos","data","fetch","console","log","useGetTodos","isLoading","setIsLoading","error","setError","setData","execute","todos","e"],"mappings":";;AAAA,SACIA,QADJ,EAEIC,WAFJ,QAGS,OAHT;AAKE,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC;AACA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EAHkC,CAIlC;;AAEA,SAAOA,IAAP;AACD,CAPM;AASP,OAAO,MAAMI,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACG,IAAD,EAAOS,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMa,OAAO,GAAG,YAAY;AAC1B,QAAI;AACFJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMK,KAAK,GAAGZ,QAAQ,EAAtB;AACAU,MAAAA,OAAO,CAACE,KAAD,CAAP;AACA,aAAOA,KAAP;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACI,CAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMM,CAAN;AACD;AACF,GAXD;;AAaA,SAAO;AACLP,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLP,IAAAA,IAHK;AAILU,IAAAA,OAAO,EAAEZ,WAAW,CAACY,OAAD,EAAU,EAAV,CAJf,CAI8B;;AAJ9B,GAAP;AAMD,CAxBM;;GAAMN,W","sourcesContent":["import {\n    useState,\n    useCallback,\n  } from 'react';\n  \n  export const getTodos = async () => {\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const data = await fetch('https://jsonplaceholder.typicode.com/todos');\n    console.log('data', data);\n    // add transformers here if needed\n    \n    return data;\n  };\n  \n  export const useGetTodos = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(0);\n    \n    const execute = async () => {\n      try {\n        setIsLoading(true);\n        const todos = getTodos();\n        setData(todos);\n        return todos;\n      } catch (e) {\n        setError(e);\n        setIsLoading(false);\n        throw e;\n      }\n    };\n    \n    return {\n      isLoading,\n      error,\n      data,\n      execute: useCallback(execute, []), // to avoid infinite calls when inside a `useEffect`\n    };\n  };"]},"metadata":{},"sourceType":"module"}