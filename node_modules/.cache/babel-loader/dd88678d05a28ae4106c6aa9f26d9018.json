{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { ApiPromise } from '@polkadot/api';\nexport const getTodos = async () => {\n  const api = await ApiPromise.create();\n  const [chain, nodeName, nodeVersion] = await Promise.all([api.rpc.system.chain(), api.rpc.system.name(), api.rpc.system.version()]);\n  console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`);\n  return nodeVersion;\n};\nexport const useGetTodos = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(0);\n\n  const execute = async () => {\n    try {\n      setIsLoading(true);\n      const todos = await getTodos();\n      setData(todos);\n      return todos;\n    } catch (e) {\n      setError(e);\n      setIsLoading(false);\n      throw e;\n    }\n  };\n\n  return {\n    isLoading,\n    error,\n    data,\n    execute: execute,\n    execute: useCallback(execute, [])\n  };\n};\n\n_s(useGetTodos, \"+hJCLURRaFwB5Yc35wJDCGJXr5Q=\");","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/src/useTodo.js"],"names":["useState","useCallback","ApiPromise","getTodos","api","create","chain","nodeName","nodeVersion","Promise","all","rpc","system","name","version","console","log","useGetTodos","isLoading","setIsLoading","error","setError","data","setData","execute","todos","e"],"mappings":";;AAAA,SACIA,QADJ,EAEIC,WAFJ,QAGS,OAHT;AAIA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMF,UAAU,CAACG,MAAX,EAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,IAAiC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACvDN,GAAG,CAACO,GAAJ,CAAQC,MAAR,CAAeN,KAAf,EADuD,EAEvDF,GAAG,CAACO,GAAJ,CAAQC,MAAR,CAAeC,IAAf,EAFuD,EAGvDT,GAAG,CAACO,GAAJ,CAAQC,MAAR,CAAeE,OAAf,EAHuD,CAAZ,CAA7C;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BV,KAAM,UAASC,QAAS,KAAIC,WAAY,EAAlF;AACA,SAAOA,WAAP;AACD,CAVM;AAYP,OAAO,MAAMS,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMwB,OAAO,GAAG,YAAY;AAC1B,QAAI;AACFL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMM,KAAK,GAAG,MAAMtB,QAAQ,EAA5B;AACAoB,MAAAA,OAAO,CAACE,KAAD,CAAP;AACA,aAAOA,KAAP;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMO,CAAN;AACD;AACF,GAXD;;AAaA,SAAO;AACLR,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA,IAHK;AAILE,IAAAA,OAAO,EAAEA,OAJJ;AAKLA,IAAAA,OAAO,EAAEvB,WAAW,CAACuB,OAAD,EAAU,EAAV;AALf,GAAP;AAOD,CAzBM;;GAAMP,W","sourcesContent":["import {\n    useState,\n    useCallback,\n  } from 'react';\nimport { ApiPromise } from '@polkadot/api';\n\nexport const getTodos = async () => {\n  const api = await ApiPromise.create();\n  const [chain, nodeName, nodeVersion] = await Promise.all([\n    api.rpc.system.chain(),\n    api.rpc.system.name(),\n    api.rpc.system.version()\n  ]);\n\n  console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`);\n  return nodeVersion;\n};\n\nexport const useGetTodos = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(0);\n  \n  const execute = async () => {\n    try {\n      setIsLoading(true);\n      const todos = await getTodos();\n      setData(todos);\n      return todos;\n    } catch (e) {\n      setError(e);\n      setIsLoading(false);\n      throw e;\n    }\n  };\n  \n  return {\n    isLoading,\n    error,\n    data,\n    execute: execute,\n    execute: useCallback(execute, [])\n  };\n};"]},"metadata":{},"sourceType":"module"}