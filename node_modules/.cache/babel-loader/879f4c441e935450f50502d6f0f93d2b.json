{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const getTodos = async () => {\n  console.log('123');\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  console.log('response', response.json());\n  const data = await response.json().length;\n  console.log('data', data); // add transformers here if needed\n\n  return data;\n};\nexport const useGetTodos = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(0);\n\n  const execute = async () => {\n    try {\n      setIsLoading(true);\n      const todos = await getTodos();\n      setData(todos);\n      return todos;\n    } catch (e) {\n      setError(e);\n      setIsLoading(false);\n      throw e;\n    }\n  };\n\n  return {\n    isLoading,\n    error,\n    data,\n    execute: useCallback(execute, []) // to avoid infinite calls when inside a `useEffect`\n\n  };\n};\n\n_s(useGetTodos, \"+hJCLURRaFwB5Yc35wJDCGJXr5Q=\");","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/src/useTodo.js"],"names":["useState","useCallback","getTodos","console","log","response","fetch","json","data","length","useGetTodos","isLoading","setIsLoading","error","setError","setData","execute","todos","e"],"mappings":";;AAAA,SACIA,QADJ,EAEIC,WAFJ,QAGS,OAHT;AAKE,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAQ,CAACE,IAAT,EAAxB;AACA,QAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACE,IAAT,GAAgBE,MAAnC;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB,EALkC,CAMlC;;AAEA,SAAOA,IAAP;AACD,CATM;AAWP,OAAO,MAAME,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOO,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMgB,OAAO,GAAG,YAAY;AAC1B,QAAI;AACFJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMK,KAAK,GAAG,MAAMf,QAAQ,EAA5B;AACAa,MAAAA,OAAO,CAACE,KAAD,CAAP;AACA,aAAOA,KAAP;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACI,CAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMM,CAAN;AACD;AACF,GAXD;;AAaA,SAAO;AACLP,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLL,IAAAA,IAHK;AAILQ,IAAAA,OAAO,EAAEf,WAAW,CAACe,OAAD,EAAU,EAAV,CAJf,CAI8B;;AAJ9B,GAAP;AAMD,CAxBM;;GAAMN,W","sourcesContent":["import {\n    useState,\n    useCallback,\n  } from 'react';\n  \n  export const getTodos = async () => {\n    console.log('123');\n    const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n    console.log('response', response.json());\n    const data = await response.json().length;\n    console.log('data', data);\n    // add transformers here if needed\n    \n    return data;\n  };\n  \n  export const useGetTodos = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(0);\n    \n    const execute = async () => {\n      try {\n        setIsLoading(true);\n        const todos = await getTodos();\n        setData(todos);\n        return todos;\n      } catch (e) {\n        setError(e);\n        setIsLoading(false);\n        throw e;\n      }\n    };\n    \n    return {\n      isLoading,\n      error,\n      data,\n      execute: useCallback(execute, []), // to avoid infinite calls when inside a `useEffect`\n    };\n  };"]},"metadata":{},"sourceType":"module"}