{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.js\"; // Small helper function to factorize code on this page.\n\n/** @internal */\n\nfunction createRuntimeFunction(method, key, {\n  documentation,\n  type\n}) {\n  return registry => createFunction(registry, {\n    meta: {\n      documentation: registry.createType('Vec<Text>', [documentation]),\n      modifier: registry.createType('StorageEntryModifierLatest', 1),\n      // required\n      name: registry.createType('Text', method),\n      toJSON: () => key,\n      type: registry.createType('StorageEntryTypeLatest', type, 0)\n    },\n    method,\n    prefix: 'Substrate',\n    section: 'substrate'\n  }, {\n    key,\n    skipHashing: true\n  });\n}\n\nexport const substrate = {\n  changesTrieConfig: createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n    documentation: ' Changes trie configuration is stored under this key.',\n    type: 'u32'\n  }),\n  childStorageKeyPrefix: createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n    documentation: ' Prefix of child storage keys.',\n    type: 'u32'\n  }),\n  code: createRuntimeFunction('code', ':code', {\n    documentation: ' Wasm code of the runtime.',\n    type: 'Bytes'\n  }),\n  extrinsicIndex: createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n    documentation: ' Current extrinsic index (u32) is stored under this key.',\n    type: 'u32'\n  }),\n  heapPages: createRuntimeFunction('heapPages', ':heappages', {\n    documentation: ' Number of wasm linear memory pages required for execution of the runtime.',\n    type: 'u64'\n  })\n};","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/metadata/decorate/storage/substrate.js"],"names":["createFunction","createRuntimeFunction","method","key","documentation","type","registry","meta","createType","modifier","name","toJSON","prefix","section","skipHashing","substrate","changesTrieConfig","childStorageKeyPrefix","code","extrinsicIndex","heapPages"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,qBAA/B,C,CAEA;;AAEA;;AACA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,GAAvC,EAA4C;AAC1CC,EAAAA,aAD0C;AAE1CC,EAAAA;AAF0C,CAA5C,EAGG;AACD,SAAOC,QAAQ,IAAIN,cAAc,CAACM,QAAD,EAAW;AAC1CC,IAAAA,IAAI,EAAE;AACJH,MAAAA,aAAa,EAAEE,QAAQ,CAACE,UAAT,CAAoB,WAApB,EAAiC,CAACJ,aAAD,CAAjC,CADX;AAEJK,MAAAA,QAAQ,EAAEH,QAAQ,CAACE,UAAT,CAAoB,4BAApB,EAAkD,CAAlD,CAFN;AAGJ;AACAE,MAAAA,IAAI,EAAEJ,QAAQ,CAACE,UAAT,CAAoB,MAApB,EAA4BN,MAA5B,CAJF;AAKJS,MAAAA,MAAM,EAAE,MAAMR,GALV;AAMJE,MAAAA,IAAI,EAAEC,QAAQ,CAACE,UAAT,CAAoB,wBAApB,EAA8CH,IAA9C,EAAoD,CAApD;AANF,KADoC;AAS1CH,IAAAA,MAT0C;AAU1CU,IAAAA,MAAM,EAAE,WAVkC;AAW1CC,IAAAA,OAAO,EAAE;AAXiC,GAAX,EAY9B;AACDV,IAAAA,GADC;AAEDW,IAAAA,WAAW,EAAE;AAFZ,GAZ8B,CAAjC;AAgBD;;AAED,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,iBAAiB,EAAEf,qBAAqB,CAAC,mBAAD,EAAsB,eAAtB,EAAuC;AAC7EG,IAAAA,aAAa,EAAE,uDAD8D;AAE7EC,IAAAA,IAAI,EAAE;AAFuE,GAAvC,CADjB;AAKvBY,EAAAA,qBAAqB,EAAEhB,qBAAqB,CAAC,uBAAD,EAA0B,iBAA1B,EAA6C;AACvFG,IAAAA,aAAa,EAAE,gCADwE;AAEvFC,IAAAA,IAAI,EAAE;AAFiF,GAA7C,CALrB;AASvBa,EAAAA,IAAI,EAAEjB,qBAAqB,CAAC,MAAD,EAAS,OAAT,EAAkB;AAC3CG,IAAAA,aAAa,EAAE,4BAD4B;AAE3CC,IAAAA,IAAI,EAAE;AAFqC,GAAlB,CATJ;AAavBc,EAAAA,cAAc,EAAElB,qBAAqB,CAAC,gBAAD,EAAmB,kBAAnB,EAAuC;AAC1EG,IAAAA,aAAa,EAAE,0DAD2D;AAE1EC,IAAAA,IAAI,EAAE;AAFoE,GAAvC,CAbd;AAiBvBe,EAAAA,SAAS,EAAEnB,qBAAqB,CAAC,WAAD,EAAc,YAAd,EAA4B;AAC1DG,IAAAA,aAAa,EAAE,4EAD2C;AAE1DC,IAAAA,IAAI,EAAE;AAFoD,GAA5B;AAjBT,CAAlB","sourcesContent":["// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createFunction } from \"./createFunction.js\";\n\n// Small helper function to factorize code on this page.\n\n/** @internal */\nfunction createRuntimeFunction(method, key, {\n  documentation,\n  type\n}) {\n  return registry => createFunction(registry, {\n    meta: {\n      documentation: registry.createType('Vec<Text>', [documentation]),\n      modifier: registry.createType('StorageEntryModifierLatest', 1),\n      // required\n      name: registry.createType('Text', method),\n      toJSON: () => key,\n      type: registry.createType('StorageEntryTypeLatest', type, 0)\n    },\n    method,\n    prefix: 'Substrate',\n    section: 'substrate'\n  }, {\n    key,\n    skipHashing: true\n  });\n}\n\nexport const substrate = {\n  changesTrieConfig: createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n    documentation: ' Changes trie configuration is stored under this key.',\n    type: 'u32'\n  }),\n  childStorageKeyPrefix: createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n    documentation: ' Prefix of child storage keys.',\n    type: 'u32'\n  }),\n  code: createRuntimeFunction('code', ':code', {\n    documentation: ' Wasm code of the runtime.',\n    type: 'Bytes'\n  }),\n  extrinsicIndex: createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n    documentation: ' Current extrinsic index (u32) is stored under this key.',\n    type: 'u32'\n  }),\n  heapPages: createRuntimeFunction('heapPages', ':heappages', {\n    documentation: ' Number of wasm linear memory pages required for execution of the runtime.',\n    type: 'u64'\n  })\n};"]},"metadata":{},"sourceType":"module"}