{"ast":null,"code":"// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger, stringify } from '@polkadot/util';\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from '@polkadot/x-rxjs/operators';\nimport { refCountDelay } from \"./refCountDelay.js\";\nconst l = logger('drr');\n\nconst CMP = (a, b) => stringify({\n  t: a\n}) === stringify({\n  t: b\n});\n\nconst ERR = error => {\n  l.error(error.message);\n  throw error;\n};\n\nconst NOOP = () => undefined;\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport const drr = ({\n  delay,\n  skipChange = false,\n  skipTimeout = false\n} = {}) => source$ => source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));","map":{"version":3,"sources":["/home/wirednkod/Documents/repos/mine/sampleContext/node_modules/@polkadot/rpc-core/util/drr.js"],"names":["logger","stringify","catchError","distinctUntilChanged","publishReplay","refCount","tap","refCountDelay","l","CMP","a","b","t","ERR","error","message","NOOP","undefined","drr","delay","skipChange","skipTimeout","source$","pipe"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,gBAAlC;AACA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,aAA3C,EAA0DC,QAA1D,EAAoEC,GAApE,QAA+E,4BAA/E;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,MAAMC,CAAC,GAAGR,MAAM,CAAC,KAAD,CAAhB;;AAEA,MAAMS,GAAG,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUV,SAAS,CAAC;AAC9BW,EAAAA,CAAC,EAAEF;AAD2B,CAAD,CAAT,KAEfT,SAAS,CAAC;AACfW,EAAAA,CAAC,EAAED;AADY,CAAD,CAFhB;;AAMA,MAAME,GAAG,GAAGC,KAAK,IAAI;AACnBN,EAAAA,CAAC,CAACM,KAAF,CAAQA,KAAK,CAACC,OAAd;AACA,QAAMD,KAAN;AACD,CAHD;;AAKA,MAAME,IAAI,GAAG,MAAMC,SAAnB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAClBC,EAAAA,KADkB;AAElBC,EAAAA,UAAU,GAAG,KAFK;AAGlBC,EAAAA,WAAW,GAAG;AAHI,IAIhB,EAJe,KAIRC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAarB,UAAU,CAACW,GAAD,CAAvB,EAA8BO,UAAU,GAAGd,GAAG,CAACU,IAAD,CAAN,GAAeb,oBAAoB,CAACM,GAAD,CAA3E,EAAkFL,aAAa,CAAC,CAAD,CAA/F,EAAoGiB,WAAW,GAAGhB,QAAQ,EAAX,GAAgBE,aAAa,CAACY,KAAD,CAA5I,CAJf","sourcesContent":["// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger, stringify } from '@polkadot/util';\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from '@polkadot/x-rxjs/operators';\nimport { refCountDelay } from \"./refCountDelay.js\";\nconst l = logger('drr');\n\nconst CMP = (a, b) => stringify({\n  t: a\n}) === stringify({\n  t: b\n});\n\nconst ERR = error => {\n  l.error(error.message);\n  throw error;\n};\n\nconst NOOP = () => undefined;\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport const drr = ({\n  delay,\n  skipChange = false,\n  skipTimeout = false\n} = {}) => source$ => source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));"]},"metadata":{},"sourceType":"module"}